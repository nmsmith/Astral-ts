//- Main view
div.matchParentSize.col
    div.toolbar
        button(@click = "resetState") Reset state
    div.database.col
        template(v-for = "(n, index) in dbEntryCount")
            template(v-if = "(insertingRule === null) || index < insertingRule.at")
                div.insertHere(@click = "newRule(index)")
                p {{ currentDB.rules[index] }}
            template(v-else-if = "index === insertingRule.at")
                input(
                    ref = "ruleInput"
                    v-model = "insertingRule.text"
                    placeholder = "Enter a rule..."
                    @keyup.enter = "ruleAdded"
                )
            template(v-else-if = "index > insertingRule.at")
                p {{ currentDB.rules[index-1] }}
                div.insertHere(@click = "newRule(index)")
        div.insertHere(@click = "newRule(dbEntryCount)")

        br
        p Create a new constant:
        div.searchBox.row(@click = "focusConstantInput")
            div.zeroSize
                input.inputForSearchBox(
                    ref = "constantInput"
                    v-model = "constantInputState.text"
                    @keydown.enter = "constantCreated"
                    @keydown.prevent.up = "selectPrevious"
                    @keydown.prevent.down = "selectNext"
                )
            p {{ constantInputState.text }}
            //p.greyedText {{ autocompleteText }}
            // Leave a space char to ensure the box has the same height when empty
            p.noSelect &nbsp;
        template(v-for = "(text, index) in textForSearchMatches")
            div.suggestionBox(:class="{highlighted: index === constantInputState.selection}").
                {{ text }}