.view {
    @extend .fillViewport;
    @extend .row;
// create a stacking context so can we render the rule view (and its dropdowns)
// in front of other page elements
    position: relative;
    z-index: 0;
}

.viewBottomPadding {
    height: 50vh;
}

$main-pad: 10px;

.toolbar {
    @extend .row;
    height: 30px;
    padding: $main-pad;
}

$standard-border-color: #aaaaaa;

.separator {
    border-bottom-style: solid;
    border-width: 1px;
    border-color: $standard-border-color;
}

.codeArea {
    padding: 6px;
    font-family: "Lucida Console", Monaco, monospace;
    line-height: 140%;
    font-size: 18px;
}

.graphView {
    @extend .col;
    @extend .codeArea;
    width: 200px;
    background-color: #ddddff;
}

.recursiveGroupComponent {
    @extend .row;
}
.spacer {
    width: 10px;
}

.ruleView {
    @extend .col;
// create a stacking context so can we render insertion points behind rule cards
    position: relative;
    z-index: 1;
}

.unstyledButton {
    border-style: none;
    background-color: #ffffff00;
}

.insertionPoint {
    @extend .unstyledButton;
    flex-shrink: 0;
    transition: background-color 0.1s;
}

// only highlight if the device actually has hover
@media(hover: hover) {
    .insertionPoint:hover {
        background-color: #ffefbc;
    }
}

// highlight the button when it is tab-focused
.insertionPoint:focus {
    background-color: #ffefbc;
}

.ruleInsertionPoint {
    @extend .insertionPoint;
    height: 20px;
// create a stacking context so can we render behind rule cards
    position: relative;
    z-index: -1;
}

$box-shadow-color: #979797;
$standard-box-shadow: 1px 1px 3px 2px $box-shadow-color;

.labelError {
    background-color: #ffbfbf;
}

.rule {
    width: 1000px;
    flex-shrink: 0;
    @extend .col;
    margin-left: $main-pad;
    margin-right: $main-pad;
    box-shadow: $standard-box-shadow;
    align-self: flex-start;
    background-color: white;
}

// .beingDragged {
//     pointer-events: none;
// }

.ruleLabelBar {
    @extend .row;
    padding-left: 8px;
    padding-right: 4px;
    padding-top: 6px;
    padding-bottom: 6px;
    border-bottom-style: solid;
    border-width: 1px;
    border-color: $standard-border-color;
}

.ruleLabelText {
    flex-grow: 1;
    font-size: 1.15em;
    border-style: none;
}

.ruleDragHandle {
    @extend .unstyledButton;
    @extend .noSelect;
    color: #414141;
    font-size: 1.2em;
    align-self: center;
    padding-left: 10px;
    padding-right: 6px;
    padding-top: 2px;
    cursor: grab;
}

.ruleLabelTextForNothing {
    @extend .ruleLabelText;
    @extend .labelError;
}

.ruleTextDiv {
    width: 60%;
}

.ruleTextArea {
    @extend .codeArea;
    box-sizing: border-box;
    width: 100%;
    overflow-y: hidden;
    border-style: none;
    resize: none;
}

.errorText {
    padding: 4px;
    background-color: #ffbfbf;
}

.decompressionPane {
    width: 40%;
    @extend .col;
    @extend .codeArea;
    border-style: solid;
    border-width: 0 0 0 1px;
    border-color: $standard-border-color;
}